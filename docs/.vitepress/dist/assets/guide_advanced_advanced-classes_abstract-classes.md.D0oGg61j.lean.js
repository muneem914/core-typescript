import{_ as e,C as l,c as h,o as p,ag as n,j as i,a,G as k}from"./chunks/framework.DPDPlp3K.js";const u=JSON.parse('{"title":"Abstract Classes","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/advanced/advanced-classes/abstract-classes.md","filePath":"guide/advanced/advanced-classes/abstract-classes.md"}'),r={name:"guide/advanced/advanced-classes/abstract-classes.md"};function d(o,s,c,E,g,y){const t=l("Badge");return p(),h("div",null,[s[7]||(s[7]=n("",11)),i("ul",null,[s[5]||(s[5]=i("li",null,[i("code",null,"Vehicle"),a(" is an "),i("code",null,"abstract class"),a(", means it cannot be instantiated or used directly. It contains both concrete and abstract methods.")],-1)),i("li",null,[s[0]||(s[0]=i("code",null,"move()",-1)),s[1]||(s[1]=a(" is a concrete method, which have complete definition or method body, but it can be overridden by inherited class; or you can say its a common behavior shared by all vehicle providing a default implementation that can be overridden by subclasses. ")),k(t,{type:"danger",text:"Note:"}),s[2]||(s[2]=a(" If its not overridden, it will be act as a default behavior of all sub-classes which are inherited from ")),s[3]||(s[3]=i("code",null,"abstract class Vehicle",-1)),s[4]||(s[4]=a("."))]),s[6]||(s[6]=n("",4))]),s[8]||(s[8]=n("",18))])}const m=e(r,[["render",d]]);export{u as __pageData,m as default};
